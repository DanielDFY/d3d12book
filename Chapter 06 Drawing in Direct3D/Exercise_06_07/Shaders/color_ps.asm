//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer gObjectConstants
// {
//
//   struct ObjectConstants
//   {
//       
//       float4x4 gWorldViewProj;       // Offset:    0
//       float gTime;                   // Offset:   64
//
//   } gObjectConstants;                // Offset:    0 Size:    68
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// gObjectConstants                  cbuffer      NA          NA     CB0            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[0:0][5], immediateIndexed, space=0
dcl_input_ps linear v1.xyzw
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
//   v1.x <- pin.Color.x; v1.y <- pin.Color.y; v1.z <- pin.Color.z; v1.w <- pin.Color.w; 
//   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
//
#line 51 "E:\Github\d3d12book\Chapter 06 Drawing in Direct3D\Exercise_06_07\Shaders\color.hlsl"
sincos r0.x, null, CB0[0][4].x
mov r0.y, -r0.x
max r0.x, r0.y, r0.x
max r0.x, r0.x, l(0.500000)
min r0.x, r0.x, l(1.000000)
mul o0.xyzw, r0.xxxx, v1.xyzw
ret 
// Approximately 7 instruction slots used
